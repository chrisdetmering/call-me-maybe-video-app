{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/call-me/client/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Video from './components/Video/Video';\nimport { connect, createLocalTracks, createLocalVideoTrack } from 'twilio-video';\nimport './App.css'; // const Token = ''\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      room: null,\n      token: null\n    };\n\n    this.connectRoom = token => {\n      connect(token, {\n        name: 'my-new-room'\n      }).then(room => {\n        this.setState({\n          room: room\n        });\n        console.log(`Successfully joined a Room: ${room}`);\n        room.on('participantConnected', participant => {\n          console.log(`A remote Participant connected: ${participant}`);\n        });\n      }, error => {\n        console.error(`Unable to connect to Room: ${error.message}`);\n      });\n    };\n\n    this.connectMedia = token => {\n      createLocalTracks({\n        audio: true,\n        video: {\n          width: 640\n        }\n      }).then(localTracks => {\n        return connect(token, {\n          name: 'my-new-room',\n          tracks: localTracks\n        });\n      }).then(room => {\n        console.log(`Connected to Room: ${room.name}`);\n      });\n    };\n\n    this.checkPerticipant = () => {\n      console.log(this.state.room.localParticipant);\n    };\n\n    this.preview = () => {\n      createLocalVideoTrack().then(track => {\n        const localMediaContainer = document.getElementById('local-media');\n        localMediaContainer.appendChild(track.attach());\n      });\n    };\n\n    this.addVideo = () => {\n      let tracks = this.state.room.localParticipant._tracks.values();\n\n      for (const track of tracks) {\n        document.getElementById('local-media').appendChild(track.attach());\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/token').then(res => {\n      this.setState({\n        token: res.data.token\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.connectRoom(this.state.token),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Make Room\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.connectMedia(this.state.token),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Add Media\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.addVideo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Show Video\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.checkPerticipant(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Check Perticipants\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.preview(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Preview\"));\n  }\n\n}\n\nexport default App; //APi Key\n// FRIENDLY NAME\n// Christopher Detmering\n// SID\n// SKd1a4803b36c14c17f63a15fa4846a40f\n// KEY TYPE\n// Master\n// SECRET\n// h8t2m8hhl0UHxEwi2nynsxEkAwmfRroR","map":{"version":3,"sources":["/Users/chris/Desktop/call-me/client/src/App.js"],"names":["React","axios","Video","connect","createLocalTracks","createLocalVideoTrack","App","Component","state","room","token","connectRoom","name","then","setState","console","log","on","participant","error","message","connectMedia","audio","video","width","localTracks","tracks","checkPerticipant","localParticipant","preview","track","localMediaContainer","document","getElementById","appendChild","attach","addVideo","_tracks","values","componentDidMount","get","res","data","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Video from './components/Video/Video';\nimport {\n  connect,\n  createLocalTracks,\n  createLocalVideoTrack\n} from 'twilio-video';\nimport './App.css';\n\n// const Token = ''\n\nclass App extends React.Component {\n  state = {\n    room: null,\n    token: null\n  }\n\n\n  componentDidMount () { \n    axios.get('/api/token').then(res => { \n      this.setState({ token: res.data.token})\n    })\n  }\n\n\n  connectRoom = (token) => {\n    connect(token, { name: 'my-new-room' }).then(room => {\n      this.setState({ room: room })\n      console.log(`Successfully joined a Room: ${room}`);\n\n      room.on('participantConnected', participant => {\n\n        console.log(`A remote Participant connected: ${participant}`);\n\n      });\n    }, error => {\n      console.error(`Unable to connect to Room: ${error.message}`);\n    });\n  }\n\n  connectMedia = (token) => {\n    createLocalTracks({\n      audio: true,\n      video: { width: 640 }\n    }).then(localTracks => {\n      return connect(token, {\n        name: 'my-new-room',\n        tracks: localTracks\n      });\n    }).then(room => {\n      console.log(`Connected to Room: ${room.name}`);\n    });\n  }\n\n  checkPerticipant = () => {\n    console.log(this.state.room.localParticipant)\n  }\n\n  preview = () => {\n    createLocalVideoTrack().then(track => {\n      const localMediaContainer = document.getElementById('local-media');\n      localMediaContainer.appendChild(track.attach());\n    });\n  }\n\n  addVideo = () => {\n    let tracks = this.state.room.localParticipant._tracks.values()\n    for (const track of tracks) {\n      document.getElementById('local-media').appendChild(track.attach())\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <button onClick={() => this.connectRoom(this.state.token)}>Make Room</button>\n        <button onClick={() => this.connectMedia(this.state.token)}>Add Media</button>\n        <button onClick={() => this.addVideo()}>Show Video</button>\n\n        <button onClick={() => this.checkPerticipant()}>Check Perticipants</button>\n        <button onClick={() => this.preview()}>Preview</button>\n\n        \n\n\n        \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n//APi Key\n// FRIENDLY NAME\n// Christopher Detmering\n\n// SID\n// SKd1a4803b36c14c17f63a15fa4846a40f\n\n// KEY TYPE\n// Master\n\n// SECRET\n// h8t2m8hhl0UHxEwi2nynsxEkAwmfRroR"]},"metadata":{},"sourceType":"module"}