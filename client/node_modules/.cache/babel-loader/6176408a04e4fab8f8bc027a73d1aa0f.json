{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar StateMachine = require('../statemachine');\n\nvar NetworkQualityStats = require('../stats/networkqualitystats');\n/*\nParticipantSignaling States\n----------------------\n\n    +------------+     +-----------+     +--------------+\n    |            |     |           |     |              |\n    | connecting |---->| connected |---->| disconnected |\n    |            |     |           |     |              |\n    +------------+     +-----------+     +--------------+\n\n*/\n\n\nvar states = {\n  connecting: ['connected'],\n  connected: ['disconnected'],\n  disconnected: []\n};\n/**\n * A {@link Participant} implementation\n * @extends StateMachine\n * @property {?string} identity\n * @property {?Participant.SID} sid\n * @property {string} state - \"connecting\", \"connected\", or \"disconnected\"\n * @property {Map<Track.ID | Track.SID, TrackSignaling>} tracks\n * @emits ParticipantSignaling#networkQualityLevelChanged\n * @emits ParticipantSignaling#trackAdded\n * @emits ParticipantSignaling#trackRemoved\n */\n\nvar ParticipantSignaling = function (_StateMachine) {\n  _inherits(ParticipantSignaling, _StateMachine);\n  /**\n   * Construct a {@link ParticipantSignaling}.\n   */\n\n\n  function ParticipantSignaling() {\n    _classCallCheck(this, ParticipantSignaling);\n\n    var _this = _possibleConstructorReturn(this, (ParticipantSignaling.__proto__ || Object.getPrototypeOf(ParticipantSignaling)).call(this, 'connecting', states));\n\n    Object.defineProperties(_this, {\n      _enqueuedPriorityUpdates: {\n        value: new Map()\n      },\n      _identity: {\n        writable: true,\n        value: null\n      },\n      _networkQualityLevel: {\n        value: null,\n        writable: true\n      },\n      _networkQualityStats: {\n        value: null,\n        writable: true\n      },\n      _sid: {\n        writable: true,\n        value: null\n      },\n      _trackPrioritySignaling: {\n        value: null,\n        writable: true\n      },\n      identity: {\n        enumerable: true,\n        get: function get() {\n          return this._identity;\n        }\n      },\n      sid: {\n        enumerable: true,\n        get: function get() {\n          return this._sid;\n        }\n      },\n      tracks: {\n        enumerable: true,\n        value: new Map()\n      }\n    });\n    return _this;\n  }\n  /**\n   * Get the current {@link NetworkQualityLevel}, if any.\n   * @returns {?NetworkQualityLevel} networkQualityLevel - initially null\n   */\n\n\n  _createClass(ParticipantSignaling, [{\n    key: 'addTrack',\n\n    /**\n     * Add the {@link TrackSignaling}, MediaStreamTrack, or\n     * {@link DataTrackSender} to the {@link ParticipantSignaling}.\n     * @param {TrackSignaling|DataTrackSender|MediaTrackSender} track\n     * @returns {this}\n     * @fires ParticipantSignaling#trackAdded\n     */\n    value: function addTrack(track) {\n      this.tracks.set(track.id || track.sid, track);\n      this.emit('trackAdded', track);\n      return this;\n    }\n    /**\n     * Disconnect the {@link ParticipantSignaling}.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      if (this.state !== 'disconnected') {\n        this.preempt('disconnected');\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Remove the {@link TrackSignaling}, MediaStreamTrack, or\n     * {@link DataTrackSender} from the {@link ParticipantSignaling}.\n     * @param {TrackSignaling|DataTrackSender|MediaTrackSender} track\n     * @returns {?TrackSignaling}\n     * @fires ParticipantSignaling#trackRemoved\n     */\n\n  }, {\n    key: 'removeTrack',\n    value: function removeTrack(track) {\n      var signaling = this.tracks.get(track.id || track.sid);\n      this.tracks.delete(track.id || track.sid);\n\n      if (signaling) {\n        this.emit('trackRemoved', track);\n      }\n\n      return signaling || null;\n    }\n    /**\n     * @param {NetworkQualityLevel} networkQualityLevel\n     * @param {?NetworkQualityLevels} [networkQualityLevels=null]\n     * @returns {void}\n     */\n\n  }, {\n    key: 'setNetworkQualityLevel',\n    value: function setNetworkQualityLevel(networkQualityLevel, networkQualityLevels) {\n      if (this._networkQualityLevel !== networkQualityLevel) {\n        this._networkQualityLevel = networkQualityLevel;\n        this._networkQualityStats = networkQualityLevels && (networkQualityLevels.audio || networkQualityLevels.video) ? new NetworkQualityStats(networkQualityLevels) : null;\n        this.emit('networkQualityLevelChanged');\n      }\n    }\n    /**\n     * updates the subscriber priority for the given track.\n     * @param {Track.SID} trackSid\n     * @param {?Track.Priority} priority\n     * @returns {void}\n     */\n\n  }, {\n    key: 'updateSubscriberTrackPriority',\n    value: function updateSubscriberTrackPriority(trackSid, priority) {\n      // note the most recent priority update for the track.\n      this._enqueuedPriorityUpdates.set(trackSid, priority);\n\n      if (this._trackPrioritySignaling) {\n        this._trackPrioritySignaling.sendTrackPriorityUpdate(trackSid, 'subscribe', priority);\n      }\n    }\n    /**\n     * Set the {@link TrackPrioritySignaling}.\n     * @param {TrackPrioritySignaling} trackPrioritySignaling\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setTrackPrioritySignaling',\n    value: function setTrackPrioritySignaling(trackPrioritySignaling) {\n      var _this2 = this;\n\n      this._trackPrioritySignaling = trackPrioritySignaling;\n\n      if (trackPrioritySignaling) {\n        this._enqueuedPriorityUpdates.forEach(function (priority, trackSid) {\n          _this2._trackPrioritySignaling.sendTrackPriorityUpdate(trackSid, 'subscribe', priority);\n        }); // NOTE(mpatwardhan)- we intentionally do not clear _enqueuedPriorityUpdates,\n        // this cache will be used to re-send the priorities in case of VMS-FailOver.\n\n      }\n\n      return this;\n    }\n    /**\n     * Connect the {@link ParticipantSignaling}.\n     * @param {Participant.SID} sid\n     * @param {string} identity\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'connect',\n    value: function connect(sid, identity) {\n      if (this.state === 'connecting') {\n        this._sid = sid;\n        this._identity = identity;\n        this.preempt('connected');\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'networkQualityLevel',\n    get: function get() {\n      return this._networkQualityLevel;\n    }\n    /**\n     * Get the current {@link NetworkQualityStats}\n     * @returns {?NetworkQualityStats} networkQualityStats - initially null\n     */\n\n  }, {\n    key: 'networkQualityStats',\n    get: function get() {\n      return this._networkQualityStats;\n    }\n  }]);\n\n  return ParticipantSignaling;\n}(StateMachine);\n/**\n * @event ParticipantSignaling#event:networkQualityLevelChanged\n */\n\n/**\n * {@link TrackSignaling} was added to the {@link ParticipantSignaling}.\n * @event ParticipantSignaling#trackAdded\n * @param {TrackSignaling} track\n */\n\n/**\n * {@link TrackSignaling} was removed from the {@link ParticipantSignaling}.\n * @event ParticipantSignaling#trackRemoved\n * @param {TrackSignaling} track\n */\n\n\nmodule.exports = ParticipantSignaling;","map":{"version":3,"sources":["/Users/chris/Desktop/call-me/client/node_modules/twilio-video/es5/signaling/participant.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","StateMachine","require","NetworkQualityStats","states","connecting","connected","disconnected","ParticipantSignaling","_StateMachine","_this","getPrototypeOf","_enqueuedPriorityUpdates","Map","_identity","_networkQualityLevel","_networkQualityStats","_sid","_trackPrioritySignaling","identity","get","sid","tracks","addTrack","track","set","id","emit","disconnect","state","preempt","removeTrack","signaling","delete","setNetworkQualityLevel","networkQualityLevel","networkQualityLevels","audio","video","updateSubscriberTrackPriority","trackSid","priority","sendTrackPriorityUpdate","setTrackPrioritySignaling","trackPrioritySignaling","_this2","forEach","connect","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar StateMachine = require('../statemachine');\nvar NetworkQualityStats = require('../stats/networkqualitystats');\n\n/*\nParticipantSignaling States\n----------------------\n\n    +------------+     +-----------+     +--------------+\n    |            |     |           |     |              |\n    | connecting |---->| connected |---->| disconnected |\n    |            |     |           |     |              |\n    +------------+     +-----------+     +--------------+\n\n*/\n\nvar states = {\n  connecting: ['connected'],\n  connected: ['disconnected'],\n  disconnected: []\n};\n\n/**\n * A {@link Participant} implementation\n * @extends StateMachine\n * @property {?string} identity\n * @property {?Participant.SID} sid\n * @property {string} state - \"connecting\", \"connected\", or \"disconnected\"\n * @property {Map<Track.ID | Track.SID, TrackSignaling>} tracks\n * @emits ParticipantSignaling#networkQualityLevelChanged\n * @emits ParticipantSignaling#trackAdded\n * @emits ParticipantSignaling#trackRemoved\n */\n\nvar ParticipantSignaling = function (_StateMachine) {\n  _inherits(ParticipantSignaling, _StateMachine);\n\n  /**\n   * Construct a {@link ParticipantSignaling}.\n   */\n  function ParticipantSignaling() {\n    _classCallCheck(this, ParticipantSignaling);\n\n    var _this = _possibleConstructorReturn(this, (ParticipantSignaling.__proto__ || Object.getPrototypeOf(ParticipantSignaling)).call(this, 'connecting', states));\n\n    Object.defineProperties(_this, {\n      _enqueuedPriorityUpdates: {\n        value: new Map()\n      },\n      _identity: {\n        writable: true,\n        value: null\n      },\n      _networkQualityLevel: {\n        value: null,\n        writable: true\n      },\n      _networkQualityStats: {\n        value: null,\n        writable: true\n      },\n      _sid: {\n        writable: true,\n        value: null\n      },\n      _trackPrioritySignaling: {\n        value: null,\n        writable: true\n      },\n      identity: {\n        enumerable: true,\n        get: function get() {\n          return this._identity;\n        }\n      },\n      sid: {\n        enumerable: true,\n        get: function get() {\n          return this._sid;\n        }\n      },\n      tracks: {\n        enumerable: true,\n        value: new Map()\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Get the current {@link NetworkQualityLevel}, if any.\n   * @returns {?NetworkQualityLevel} networkQualityLevel - initially null\n   */\n\n\n  _createClass(ParticipantSignaling, [{\n    key: 'addTrack',\n\n\n    /**\n     * Add the {@link TrackSignaling}, MediaStreamTrack, or\n     * {@link DataTrackSender} to the {@link ParticipantSignaling}.\n     * @param {TrackSignaling|DataTrackSender|MediaTrackSender} track\n     * @returns {this}\n     * @fires ParticipantSignaling#trackAdded\n     */\n    value: function addTrack(track) {\n      this.tracks.set(track.id || track.sid, track);\n      this.emit('trackAdded', track);\n      return this;\n    }\n\n    /**\n     * Disconnect the {@link ParticipantSignaling}.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      if (this.state !== 'disconnected') {\n        this.preempt('disconnected');\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Remove the {@link TrackSignaling}, MediaStreamTrack, or\n     * {@link DataTrackSender} from the {@link ParticipantSignaling}.\n     * @param {TrackSignaling|DataTrackSender|MediaTrackSender} track\n     * @returns {?TrackSignaling}\n     * @fires ParticipantSignaling#trackRemoved\n     */\n\n  }, {\n    key: 'removeTrack',\n    value: function removeTrack(track) {\n      var signaling = this.tracks.get(track.id || track.sid);\n      this.tracks.delete(track.id || track.sid);\n      if (signaling) {\n        this.emit('trackRemoved', track);\n      }\n      return signaling || null;\n    }\n\n    /**\n     * @param {NetworkQualityLevel} networkQualityLevel\n     * @param {?NetworkQualityLevels} [networkQualityLevels=null]\n     * @returns {void}\n     */\n\n  }, {\n    key: 'setNetworkQualityLevel',\n    value: function setNetworkQualityLevel(networkQualityLevel, networkQualityLevels) {\n      if (this._networkQualityLevel !== networkQualityLevel) {\n        this._networkQualityLevel = networkQualityLevel;\n        this._networkQualityStats = networkQualityLevels && (networkQualityLevels.audio || networkQualityLevels.video) ? new NetworkQualityStats(networkQualityLevels) : null;\n        this.emit('networkQualityLevelChanged');\n      }\n    }\n\n    /**\n     * updates the subscriber priority for the given track.\n     * @param {Track.SID} trackSid\n     * @param {?Track.Priority} priority\n     * @returns {void}\n     */\n\n  }, {\n    key: 'updateSubscriberTrackPriority',\n    value: function updateSubscriberTrackPriority(trackSid, priority) {\n      // note the most recent priority update for the track.\n      this._enqueuedPriorityUpdates.set(trackSid, priority);\n      if (this._trackPrioritySignaling) {\n        this._trackPrioritySignaling.sendTrackPriorityUpdate(trackSid, 'subscribe', priority);\n      }\n    }\n\n    /**\n     * Set the {@link TrackPrioritySignaling}.\n     * @param {TrackPrioritySignaling} trackPrioritySignaling\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setTrackPrioritySignaling',\n    value: function setTrackPrioritySignaling(trackPrioritySignaling) {\n      var _this2 = this;\n\n      this._trackPrioritySignaling = trackPrioritySignaling;\n      if (trackPrioritySignaling) {\n        this._enqueuedPriorityUpdates.forEach(function (priority, trackSid) {\n          _this2._trackPrioritySignaling.sendTrackPriorityUpdate(trackSid, 'subscribe', priority);\n        });\n\n        // NOTE(mpatwardhan)- we intentionally do not clear _enqueuedPriorityUpdates,\n        // this cache will be used to re-send the priorities in case of VMS-FailOver.\n      }\n      return this;\n    }\n\n    /**\n     * Connect the {@link ParticipantSignaling}.\n     * @param {Participant.SID} sid\n     * @param {string} identity\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'connect',\n    value: function connect(sid, identity) {\n      if (this.state === 'connecting') {\n        this._sid = sid;\n        this._identity = identity;\n        this.preempt('connected');\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: 'networkQualityLevel',\n    get: function get() {\n      return this._networkQualityLevel;\n    }\n\n    /**\n     * Get the current {@link NetworkQualityStats}\n     * @returns {?NetworkQualityStats} networkQualityStats - initially null\n     */\n\n  }, {\n    key: 'networkQualityStats',\n    get: function get() {\n      return this._networkQualityStats;\n    }\n  }]);\n\n  return ParticipantSignaling;\n}(StateMachine);\n\n/**\n * @event ParticipantSignaling#event:networkQualityLevelChanged\n */\n\n/**\n * {@link TrackSignaling} was added to the {@link ParticipantSignaling}.\n * @event ParticipantSignaling#trackAdded\n * @param {TrackSignaling} track\n */\n\n/**\n * {@link TrackSignaling} was removed from the {@link ParticipantSignaling}.\n * @event ParticipantSignaling#trackRemoved\n * @param {TrackSignaling} track\n */\n\nmodule.exports = ParticipantSignaling;"]},"metadata":{},"sourceType":"script"}