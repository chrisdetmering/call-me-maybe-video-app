{"ast":null,"code":"/* globals RTCPeerConnection, webkitRTCPeerConnection, mozRTCPeerConnection, navigator */\n'use strict';\n\nvar _require = require('@twilio/webrtc/lib/util'),\n    guessBrowser = _require.guessBrowser;\n/**\n * Check whether PeerConnection API is supported.\n * @returns {boolean}\n */\n\n\nfunction isRTCPeerConnectionSupported() {\n  return typeof RTCPeerConnection !== 'undefined' || typeof webkitRTCPeerConnection !== 'undefined' || typeof mozRTCPeerConnection !== 'undefined';\n}\n/**\n * Check whether GetUserMedia API is supported.\n * @returns {boolean}\n */\n\n\nfunction isGetUserMediaSupported() {\n  return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) || !!navigator.getUserMedia || !!navigator.webkitGetUserMedia || !!navigator.mozGetUserMedia;\n}\n/**\n * @returns {boolean} - true if the browser is explicitly unsupported.\n *  Note: this function returning false does not mean that browser is supported.\n */\n\n\nfunction isExplicitlyUnsupportedBrowser() {\n  if (typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string') {\n    return /Edg(e)?/.test(navigator.userAgent);\n  }\n\n  return false;\n}\n/**\n * Check if the current environment is supported by the SDK.\n * @returns {boolean}\n */\n\n\nfunction isSupported() {\n  return !isExplicitlyUnsupportedBrowser() && !!guessBrowser() && isGetUserMediaSupported() && isRTCPeerConnectionSupported();\n}\n\nmodule.exports = isSupported;","map":{"version":3,"sources":["/Users/chris/Desktop/call-me/client/node_modules/twilio-video/es5/util/support.js"],"names":["_require","require","guessBrowser","isRTCPeerConnectionSupported","RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection","isGetUserMediaSupported","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","isExplicitlyUnsupportedBrowser","userAgent","test","isSupported","module","exports"],"mappings":"AAAA;AACA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,yBAAD,CAAtB;AAAA,IACIC,YAAY,GAAGF,QAAQ,CAACE,YAD5B;AAGA;;;;;;AAMA,SAASC,4BAAT,GAAwC;AACtC,SAAO,OAAOC,iBAAP,KAA6B,WAA7B,IAA4C,OAAOC,uBAAP,KAAmC,WAA/E,IAA8F,OAAOC,oBAAP,KAAgC,WAArI;AACD;AAED;;;;;;AAIA,SAASC,uBAAT,GAAmC;AACjC,SAAO,CAAC,EAAEC,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBC,YAAnD,CAAD,IAAqE,CAAC,CAACF,SAAS,CAACE,YAAjF,IAAiG,CAAC,CAACF,SAAS,CAACG,kBAA7G,IAAmI,CAAC,CAACH,SAAS,CAACI,eAAtJ;AACD;AAED;;;;;;AAIA,SAASC,8BAAT,GAA0C;AACxC,MAAI,OAAOL,SAAP,KAAqB,WAArB,IAAoC,OAAOA,SAAS,CAACM,SAAjB,KAA+B,QAAvE,EAAiF;AAC/E,WAAQ,UAAUC,IAAV,CAAeP,SAAS,CAACM,SAAzB,CAAR;AAED;;AACD,SAAO,KAAP;AACD;AAED;;;;;;AAIA,SAASE,WAAT,GAAuB;AACrB,SAAO,CAACH,8BAA8B,EAA/B,IAAqC,CAAC,CAACX,YAAY,EAAnD,IAAyDK,uBAAuB,EAAhF,IAAsFJ,4BAA4B,EAAzH;AACD;;AAEDc,MAAM,CAACC,OAAP,GAAiBF,WAAjB","sourcesContent":["/* globals RTCPeerConnection, webkitRTCPeerConnection, mozRTCPeerConnection, navigator */\n'use strict';\n\nvar _require = require('@twilio/webrtc/lib/util'),\n    guessBrowser = _require.guessBrowser;\n\n/**\n * Check whether PeerConnection API is supported.\n * @returns {boolean}\n */\n\n\nfunction isRTCPeerConnectionSupported() {\n  return typeof RTCPeerConnection !== 'undefined' || typeof webkitRTCPeerConnection !== 'undefined' || typeof mozRTCPeerConnection !== 'undefined';\n}\n\n/**\n * Check whether GetUserMedia API is supported.\n * @returns {boolean}\n */\nfunction isGetUserMediaSupported() {\n  return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) || !!navigator.getUserMedia || !!navigator.webkitGetUserMedia || !!navigator.mozGetUserMedia;\n}\n\n/**\n * @returns {boolean} - true if the browser is explicitly unsupported.\n *  Note: this function returning false does not mean that browser is supported.\n */\nfunction isExplicitlyUnsupportedBrowser() {\n  if (typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string') {\n    return (/Edg(e)?/.test(navigator.userAgent)\n    );\n  }\n  return false;\n}\n\n/**\n * Check if the current environment is supported by the SDK.\n * @returns {boolean}\n */\nfunction isSupported() {\n  return !isExplicitlyUnsupportedBrowser() && !!guessBrowser() && isGetUserMediaSupported() && isRTCPeerConnectionSupported();\n}\n\nmodule.exports = isSupported;"]},"metadata":{},"sourceType":"script"}