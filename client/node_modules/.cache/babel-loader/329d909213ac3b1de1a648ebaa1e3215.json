{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DefaultRecordingSignaling = require('./recording');\n\nvar StateMachine = require('../statemachine');\n\nvar _require = require('../util/twilio-video-errors'),\n    MediaConnectionError = _require.MediaConnectionError,\n    SignalingConnectionDisconnectedError = _require.SignalingConnectionDisconnectedError;\n/*\nRoomSignaling States\n-----------------------\n\n    +-----------+     +--------------+\n    |           |     |              |\n    | connected |---->| disconnected |\n    |           |     |              |\n    +-----------+     +--------------+\n          |  ^               ^\n          |  |               |\n          |  |   +--------------+\n          |  +---|              |\n          |      | reconnecting |\n          +----->|              |\n                 +--------------+\n\n*/\n\n\nvar states = {\n  connected: ['reconnecting', 'disconnected'],\n  reconnecting: ['connected', 'disconnected'],\n  disconnected: []\n};\n/**\n * A {@link Room} implementation\n * @extends StateMachine\n * @property {?Participant.SID} dominantSpeakerSid\n * @property {ParticipantSignaling} localParticipant\n * @property {RTCIceConnectionState} mediaConnectionState\n * @property {string} name\n * @property {Map<string, RemoteParticipantSignaling>} participants\n * @property {RecordingSignaling} recording\n * @property {Room.SID} sid\n * @property {string} state - \"connected\", \"reconnecting\", or \"disconnected\"\n * @property {string} signalingConnectionState - \"connected\",\n *   \"reconnecting\", or \"disconnected\"\n * @emits RoomSignaling#mediaConnectionStateChanged\n * @emits RoomSignaling#signalingConnectionStateChanged\n */\n\nvar RoomSignaling = function (_StateMachine) {\n  _inherits(RoomSignaling, _StateMachine);\n  /**\n   * Construct a {@link RoomSignaling}.\n   * @param {ParticipantSignaling} localParticipant\n   * @param {Room.SID} sid\n   * @param {string} name\n   */\n\n\n  function RoomSignaling(localParticipant, sid, name, options) {\n    _classCallCheck(this, RoomSignaling);\n\n    options = Object.assign({\n      RecordingSignaling: DefaultRecordingSignaling\n    }, options);\n\n    var _this = _possibleConstructorReturn(this, (RoomSignaling.__proto__ || Object.getPrototypeOf(RoomSignaling)).call(this, 'connected', states));\n\n    var RecordingSignaling = options.RecordingSignaling;\n    Object.defineProperties(_this, {\n      _mediaConnectionIsReconnecting: {\n        writable: true,\n        value: false\n      },\n      _options: {\n        value: options\n      },\n      dominantSpeakerSid: {\n        enumerable: true,\n        value: null,\n        writable: true\n      },\n      localParticipant: {\n        enumerable: true,\n        value: localParticipant\n      },\n      name: {\n        enumerable: true,\n        value: name\n      },\n      participants: {\n        enumerable: true,\n        value: new Map()\n      },\n      recording: {\n        enumerable: true,\n        value: new RecordingSignaling()\n      },\n      sid: {\n        enumerable: true,\n        value: sid\n      }\n    });\n\n    _this.on('mediaConnectionStateChanged', function () {\n      return maybeUpdateState(_this);\n    });\n\n    _this.on('signalingConnectionStateChanged', function () {\n      return maybeUpdateState(_this);\n    });\n\n    return _this;\n  }\n  /**\n   * Disconnect, possibly with an Error.\n   * @private\n   * @param {Error} [error]\n   * @returns {boolean}\n   */\n\n\n  _createClass(RoomSignaling, [{\n    key: '_disconnect',\n    value: function _disconnect(error) {\n      if (this.state !== 'disconnected') {\n        this.preempt('disconnected', null, [error]);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Connect {@link RemoteParticipantSignaling} to the {@link RoomSignaling}.\n     * @param {RemoteParticipantSignaling} participant\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'connectParticipant',\n    value: function connectParticipant(participant) {\n      var self = this;\n\n      if (participant.state === 'disconnected') {\n        return false;\n      }\n\n      if (this.participants.has(participant.sid)) {\n        return false;\n      }\n\n      this.participants.set(participant.sid, participant);\n      participant.on('stateChanged', function stateChanged(state) {\n        if (state === 'disconnected') {\n          participant.removeListener('stateChanged', stateChanged);\n          self.participants.delete(participant.sid);\n          self.emit('participantDisconnected', participant);\n        }\n      });\n      this.emit('participantConnected', participant);\n      return true;\n    }\n    /**\n     * Disconnect.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      return this._disconnect();\n    }\n    /**\n     * Set (or unset) the Dominant Speaker.\n     * @param {?Participant.SID} dominantSpeakerSid\n     * @returns {void}\n     */\n\n  }, {\n    key: 'setDominantSpeaker',\n    value: function setDominantSpeaker(dominantSpeakerSid) {\n      this.dominantSpeakerSid = dominantSpeakerSid;\n      this.emit('dominantSpeakerChanged');\n    }\n  }]);\n\n  return RoomSignaling;\n}(StateMachine);\n/**\n * @event RoomSignaling#event:dominantSpeakerChanged\n */\n\n/**\n * {@link RemoteParticipantSignaling} connected to the {@link RoomSignaling}.\n * @event RoomSignaling#event:participantConnected\n * @param {RemoteParticipantSignaling} participantSignaling\n */\n\n/**\n * {@link RemoteParticipantSignaling} disconnected from the {@link RoomSignaling}.\n * @event RoomSignaling#event:participantDisconnected\n * @param {RemoteParticipantSignaling} participantSignaling\n */\n\n/**\n * @event RoomSignaling#event:mediaConnectionStateChanged\n */\n\n/**\n * @event RoomSignaling#event:signalingConnectionStateChanged\n */\n\n/**\n * Maybe update the {@link RoomSignaling} state.\n * @param {RoomSignaling} roomSignaling\n */\n\n\nfunction maybeUpdateState(roomSignaling) {\n  if (roomSignaling.state === 'disconnected' || roomSignaling.signalingConnectionState === 'disconnected') {\n    return;\n  }\n\n  var newState = void 0;\n\n  if (roomSignaling.signalingConnectionState === 'reconnecting') {\n    newState = roomSignaling.signalingConnectionState;\n  } else if (roomSignaling.mediaConnectionState === 'failed') {\n    roomSignaling._mediaConnectionIsReconnecting = true;\n    newState = 'reconnecting';\n  } else if (roomSignaling.mediaConnectionState === 'new' || roomSignaling.mediaConnectionState === 'checking') {\n    newState = roomSignaling._mediaConnectionIsReconnecting ? 'reconnecting' : 'connected';\n  } else {\n    roomSignaling._mediaConnectionIsReconnecting = false;\n    newState = 'connected';\n  }\n\n  if (newState === roomSignaling.state) {\n    return;\n  }\n\n  if (newState === 'reconnecting') {\n    roomSignaling.preempt(newState, null, [roomSignaling.signalingConnectionState === 'reconnecting' ? new SignalingConnectionDisconnectedError() : new MediaConnectionError()]);\n  } else {\n    roomSignaling.preempt(newState);\n  }\n}\n\nmodule.exports = RoomSignaling;","map":{"version":3,"sources":["/Users/chris/Desktop/call-me/client/node_modules/twilio-video/es5/signaling/room.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","DefaultRecordingSignaling","require","StateMachine","_require","MediaConnectionError","SignalingConnectionDisconnectedError","states","connected","reconnecting","disconnected","RoomSignaling","_StateMachine","localParticipant","sid","name","options","assign","RecordingSignaling","_this","getPrototypeOf","_mediaConnectionIsReconnecting","_options","dominantSpeakerSid","participants","Map","recording","on","maybeUpdateState","_disconnect","error","state","preempt","connectParticipant","participant","has","set","stateChanged","removeListener","delete","emit","disconnect","setDominantSpeaker","roomSignaling","signalingConnectionState","newState","mediaConnectionState","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DefaultRecordingSignaling = require('./recording');\nvar StateMachine = require('../statemachine');\n\nvar _require = require('../util/twilio-video-errors'),\n    MediaConnectionError = _require.MediaConnectionError,\n    SignalingConnectionDisconnectedError = _require.SignalingConnectionDisconnectedError;\n\n/*\nRoomSignaling States\n-----------------------\n\n    +-----------+     +--------------+\n    |           |     |              |\n    | connected |---->| disconnected |\n    |           |     |              |\n    +-----------+     +--------------+\n          |  ^               ^\n          |  |               |\n          |  |   +--------------+\n          |  +---|              |\n          |      | reconnecting |\n          +----->|              |\n                 +--------------+\n\n*/\n\nvar states = {\n  connected: ['reconnecting', 'disconnected'],\n  reconnecting: ['connected', 'disconnected'],\n  disconnected: []\n};\n\n/**\n * A {@link Room} implementation\n * @extends StateMachine\n * @property {?Participant.SID} dominantSpeakerSid\n * @property {ParticipantSignaling} localParticipant\n * @property {RTCIceConnectionState} mediaConnectionState\n * @property {string} name\n * @property {Map<string, RemoteParticipantSignaling>} participants\n * @property {RecordingSignaling} recording\n * @property {Room.SID} sid\n * @property {string} state - \"connected\", \"reconnecting\", or \"disconnected\"\n * @property {string} signalingConnectionState - \"connected\",\n *   \"reconnecting\", or \"disconnected\"\n * @emits RoomSignaling#mediaConnectionStateChanged\n * @emits RoomSignaling#signalingConnectionStateChanged\n */\n\nvar RoomSignaling = function (_StateMachine) {\n  _inherits(RoomSignaling, _StateMachine);\n\n  /**\n   * Construct a {@link RoomSignaling}.\n   * @param {ParticipantSignaling} localParticipant\n   * @param {Room.SID} sid\n   * @param {string} name\n   */\n  function RoomSignaling(localParticipant, sid, name, options) {\n    _classCallCheck(this, RoomSignaling);\n\n    options = Object.assign({\n      RecordingSignaling: DefaultRecordingSignaling\n    }, options);\n\n    var _this = _possibleConstructorReturn(this, (RoomSignaling.__proto__ || Object.getPrototypeOf(RoomSignaling)).call(this, 'connected', states));\n\n    var RecordingSignaling = options.RecordingSignaling;\n\n    Object.defineProperties(_this, {\n      _mediaConnectionIsReconnecting: {\n        writable: true,\n        value: false\n      },\n      _options: {\n        value: options\n      },\n      dominantSpeakerSid: {\n        enumerable: true,\n        value: null,\n        writable: true\n      },\n      localParticipant: {\n        enumerable: true,\n        value: localParticipant\n      },\n      name: {\n        enumerable: true,\n        value: name\n      },\n      participants: {\n        enumerable: true,\n        value: new Map()\n      },\n      recording: {\n        enumerable: true,\n        value: new RecordingSignaling()\n      },\n      sid: {\n        enumerable: true,\n        value: sid\n      }\n    });\n\n    _this.on('mediaConnectionStateChanged', function () {\n      return maybeUpdateState(_this);\n    });\n    _this.on('signalingConnectionStateChanged', function () {\n      return maybeUpdateState(_this);\n    });\n    return _this;\n  }\n\n  /**\n   * Disconnect, possibly with an Error.\n   * @private\n   * @param {Error} [error]\n   * @returns {boolean}\n   */\n\n\n  _createClass(RoomSignaling, [{\n    key: '_disconnect',\n    value: function _disconnect(error) {\n      if (this.state !== 'disconnected') {\n        this.preempt('disconnected', null, [error]);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Connect {@link RemoteParticipantSignaling} to the {@link RoomSignaling}.\n     * @param {RemoteParticipantSignaling} participant\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'connectParticipant',\n    value: function connectParticipant(participant) {\n      var self = this;\n\n      if (participant.state === 'disconnected') {\n        return false;\n      }\n\n      if (this.participants.has(participant.sid)) {\n        return false;\n      }\n\n      this.participants.set(participant.sid, participant);\n\n      participant.on('stateChanged', function stateChanged(state) {\n        if (state === 'disconnected') {\n          participant.removeListener('stateChanged', stateChanged);\n          self.participants.delete(participant.sid);\n          self.emit('participantDisconnected', participant);\n        }\n      });\n\n      this.emit('participantConnected', participant);\n\n      return true;\n    }\n\n    /**\n     * Disconnect.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      return this._disconnect();\n    }\n\n    /**\n     * Set (or unset) the Dominant Speaker.\n     * @param {?Participant.SID} dominantSpeakerSid\n     * @returns {void}\n     */\n\n  }, {\n    key: 'setDominantSpeaker',\n    value: function setDominantSpeaker(dominantSpeakerSid) {\n      this.dominantSpeakerSid = dominantSpeakerSid;\n      this.emit('dominantSpeakerChanged');\n    }\n  }]);\n\n  return RoomSignaling;\n}(StateMachine);\n\n/**\n * @event RoomSignaling#event:dominantSpeakerChanged\n */\n\n/**\n * {@link RemoteParticipantSignaling} connected to the {@link RoomSignaling}.\n * @event RoomSignaling#event:participantConnected\n * @param {RemoteParticipantSignaling} participantSignaling\n */\n\n/**\n * {@link RemoteParticipantSignaling} disconnected from the {@link RoomSignaling}.\n * @event RoomSignaling#event:participantDisconnected\n * @param {RemoteParticipantSignaling} participantSignaling\n */\n\n/**\n * @event RoomSignaling#event:mediaConnectionStateChanged\n */\n\n/**\n * @event RoomSignaling#event:signalingConnectionStateChanged\n */\n\n/**\n * Maybe update the {@link RoomSignaling} state.\n * @param {RoomSignaling} roomSignaling\n */\n\n\nfunction maybeUpdateState(roomSignaling) {\n  if (roomSignaling.state === 'disconnected' || roomSignaling.signalingConnectionState === 'disconnected') {\n    return;\n  }\n\n  var newState = void 0;\n\n  if (roomSignaling.signalingConnectionState === 'reconnecting') {\n    newState = roomSignaling.signalingConnectionState;\n  } else if (roomSignaling.mediaConnectionState === 'failed') {\n    roomSignaling._mediaConnectionIsReconnecting = true;\n    newState = 'reconnecting';\n  } else if (roomSignaling.mediaConnectionState === 'new' || roomSignaling.mediaConnectionState === 'checking') {\n    newState = roomSignaling._mediaConnectionIsReconnecting ? 'reconnecting' : 'connected';\n  } else {\n    roomSignaling._mediaConnectionIsReconnecting = false;\n    newState = 'connected';\n  }\n\n  if (newState === roomSignaling.state) {\n    return;\n  }\n\n  if (newState === 'reconnecting') {\n    roomSignaling.preempt(newState, null, [roomSignaling.signalingConnectionState === 'reconnecting' ? new SignalingConnectionDisconnectedError() : new MediaConnectionError()]);\n  } else {\n    roomSignaling.preempt(newState);\n  }\n}\n\nmodule.exports = RoomSignaling;"]},"metadata":{},"sourceType":"script"}